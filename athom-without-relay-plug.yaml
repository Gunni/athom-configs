substitutions:
  name: "athom-without-relay-plug"
  friendly_name: "Athom Smart Plug"
  name_add_mac_suffix: true

  device_description: "athom esp8285 without relay plug"
  project_name: "Athom Technology.Athom Without Relay Plug"
  project_version: "v2.0.6"
  sensor_update_interval: "10s"

  # Set timezone of the smart plug. Useful if the plug is in a location different to the HA server. Can be entered in unix Country/Area format (i.e. "Australia/Sydney")
  timezone: "Etc/UTC"

  # Set the duration between the sntp service polling ntp.org servers for an update
  sntp_update_interval: "1h"

  # Network time server for your region. To use local servers update as per zones or countries at: https://www.ntppool.org/zone/@
  # Note that the default no country zone should work in most cases
  sntp_server_1: "3.pool.ntp.org"

  # Define logging level: NONE, ERROR, WARN, INFO, DEBUG (Default), VERBOSE, VERY_VERBOSE
  log_level: "DEBUG"

esphome:
  name: "${name}"
  friendly_name: "${friendly_name}"
  comment: "${device_description}"
  name_add_mac_suffix: "${name_add_mac_suffix}"
  min_version: 2024.6.0
  project:
    name: "${project_name}"
    version: "${project_version}"

esp8266:
  board: esp8285
  restore_from_flash: true

preferences:
  flash_write_interval: 1h

api:

ota:
- platform: esphome

logger:
  level: ${log_level}
  baud_rate: 0

mdns:

web_server:
  port: 80

network:
  enable_ipv6: true

wifi:
  power_save_mode: none
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: true

  ap:
    password: !secret backup_ap_password

  on_connect:
    - light.turn_on: blue_led
  on_disconnect:
    - light.turn_off: blue_led

captive_portal:

uart:
  rx_pin: RX
  baud_rate: 4800
  parity: EVEN

binary_sensor:
  - platform: status
    name: "Status"
    entity_category: diagnostic    

  - platform: gpio
    pin:
      number: 5
      mode: INPUT_PULLUP
      inverted: true
    name: "Button"
    disabled_by_default: true
    on_press:
      then:
      - button.press: Restart
    on_multi_click:
      - timing:
        - ON for at least 4s
        then:
          - button.press: Reset

sensor:
  - platform: cse7766
    current:
      name: "Current"
      filters:
        - throttle_average: ${sensor_update_interval}
        - lambda: if (x < 0.060) return 0.0; else return x;

    voltage:
      name: "Voltage"
      filters:
        - throttle_average: ${sensor_update_interval}

    power:
      name: "Power"
      id: power_sensor
      filters:
        - throttle_average: ${sensor_update_interval}
        - lambda: if (x < 3.0) return 0.0; else return x;

    apparent_power:
      name: "Apparent Power"
      filters:
        - throttle_average: ${sensor_update_interval}

    reactive_power:
      name: "Reactive Power"
      filters:
        - throttle_average: ${sensor_update_interval}

    power_factor:
      name: "Power Factor"
      filters:
        - throttle_average: ${sensor_update_interval}

button:
  - platform: restart
    name: "Restart"
    id: Restart
    entity_category: diagnostic

  - platform: factory_reset
    name: "Factory Reset"
    id: Reset
    entity_category: diagnostic

  - platform: safe_mode
    name: "Safe Mode"
    internal: false
    entity_category: diagnostic

light:
  - platform: status_led
    name: "Status LED"
    id: blue_led
    disabled_by_default: true
    pin:
      inverted: true
      number: GPIO13

text_sensor:
  - platform: wifi_info
    ip_address:
      entity_category: diagnostic
      name: IPv4 Address
      address_2:
        name: IPv6 Address

    ssid:
      name: "SSID"
      entity_category: diagnostic

time:
  - platform: sntp
    id: sntp_time
    timezone: "${timezone}"
    update_interval: ${sntp_update_interval}
    servers: 
      - "${sntp_server_1}"
    on_time_sync:
      then:
      - logger.log: "Synchronized system clock"
